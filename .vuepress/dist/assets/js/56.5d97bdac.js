(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{352:function(s,a,n){"use strict";n.r(a);var t=n(4),e=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"第四章-初始面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四章-初始面向对象"}},[s._v("#")]),s._v(" 第四章 初始面向对象")]),s._v(" "),a("h1",{attrs:{id:"面向对象编程基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程基础"}},[s._v("#")]),s._v(" 面向对象编程基础")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"第2阶段：Java面向对象编程-第06章","data-src":"https://oss.lixiaoxu.cn/halo/%E7%AC%AC2%E9%98%B6%E6%AE%B5%EF%BC%9AJava%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B-%E7%AC%AC06%E7%AB%A0.png",loading:"lazy"}})]),s._v(" "),a("p",[s._v("学习面向对象内容的三条主线")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Java类及类的成员：（重点）属性、方法、构造器；（熟悉）代码块、内部类")])]),s._v(" "),a("li",[a("p",[s._v("面向对象的特征：封装、继承、多态、（抽象）")])]),s._v(" "),a("li",[a("p",[s._v("其他关键字的使用：this、super、package、import、static、final、interface、abstract等")])])]),s._v(" "),a("h2",{attrs:{id:"_1-面向对象编程概述-了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-面向对象编程概述-了解"}},[s._v("#")]),s._v(" 1. 面向对象编程概述(了解)")]),s._v(" "),a("h3",{attrs:{id:"_1-1-程序设计的思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-程序设计的思路"}},[s._v("#")]),s._v(" 1.1 程序设计的思路")]),s._v(" "),a("p",[s._v("面向对象，是软件开发中的一类编程风格、开发范式。除了"),a("code",[s._v("面向对象")]),s._v("，还有"),a("code",[s._v("面向过程")]),s._v("、"),a("code",[s._v("指令式编程")]),s._v("和"),a("code",[s._v("函数式编程")]),s._v("。在所有的编程范式中，我们接触最多的还是面向过程和面向对象两种。")]),s._v(" "),a("blockquote",[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("类比：史书类型\n- 纪传体：以人物传记为中心，“本纪”叙述帝王，“世家”记叙王侯封国和特殊人物，“列传”记叙民间人物。\n- 编年体：按年、月、日顺序编写。\n- 国别体：是一部分国记事的历史散文，分载多国历史。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("p",[s._v("早期先有面向过程思想，随着软件规模的扩大，问题复杂性的提高，"),a("code",[s._v("面向过程的弊端")]),s._v("越来越明显，出现了面向对象思想并成为目前主流的方式。")]),s._v(" "),a("p",[a("strong",[s._v("1. 面向过程的程序设计思想（Process-Oriented Programming）")]),s._v("，简称"),a("code",[s._v("POP")])]),s._v(" "),a("ul",[a("li",[s._v("关注的焦点是"),a("code",[s._v("过程")]),s._v("：过程就是操作数据的步骤。如果某个过程的实现代码重复出现，那么就可以把这个过程抽取为一个"),a("code",[s._v("函数")]),s._v("。这样就可以大大简化冗余代码，便于维护。")]),s._v(" "),a("li",[s._v("典型的语言：C语言")]),s._v(" "),a("li",[s._v("代码结构：以"),a("code",[s._v("函数")]),s._v("为组织单位。")]),s._v(" "),a("li",[s._v("是一种“"),a("code",[s._v("执行者思维")]),s._v("”，适合解决简单问题。扩展能力差、后期维护难度较大。")])]),s._v(" "),a("p",[a("strong",[s._v("2. 面向对象的程序设计思想（ Object Oriented Programming）")]),s._v("，简称"),a("code",[s._v("OOP")])]),s._v(" "),a("ul",[a("li",[s._v("关注的焦点是"),a("code",[s._v("类")]),s._v("：在计算机程序设计过程中，参照现实中事物，将事物的属性特征、行为特征抽象出来，用类来表示。")]),s._v(" "),a("li",[s._v("典型的语言：Java、C#、C++、Python、Ruby和PHP等")]),s._v(" "),a("li",[s._v("代码结构：以"),a("code",[s._v("类")]),s._v("为组织单位。每种事物都具备自己的"),a("code",[s._v("属性")]),s._v("和"),a("code",[s._v("行为/功能")]),s._v("。")]),s._v(" "),a("li",[s._v("是一种“"),a("code",[s._v("设计者思维")]),s._v("”，适合解决复杂问题。代码扩展性强、可维护性高。")])]),s._v(" "),a("h3",{attrs:{id:"_1-2-由实际问题考虑如何设计程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-由实际问题考虑如何设计程序"}},[s._v("#")]),s._v(" 1.2 由实际问题考虑如何设计程序")]),s._v(" "),a("p",[a("strong",[s._v("思考1：如何开车？")])]),s._v(" "),a("p",[s._v("面向过程思想思考问题时，我们首先思考“"),a("code",[s._v("怎么按步骤实现？")]),s._v("”并将步骤对应成方法，一步一步，最终完成。 这个适合"),a("code",[s._v("简单任务")]),s._v("，不需要"),a("code",[s._v("过多协作")]),s._v("的情况。针对如何开车，可以列出步骤：")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305151613060","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305151613060.png",loading:"lazy"}})]),s._v(" "),a("p",[s._v("面向过程适合简单、不需要协作的事务，重点关注如何执行。")]),s._v(" "),a("p",[a("strong",[s._v("思考2：如何造车？")])]),s._v(" "),a("p",[s._v("造车太复杂，需要"),a("code",[s._v("很多协作")]),s._v("才能完成。此时我们思考的是“"),a("code",[s._v("车怎么设计？")]),s._v("”，而不是“怎么按特定步骤造车的问题”。这就是思维方式的转变，前者就是面向对象思想。所以，面向对象(Oriented-Object)思想更契合人的思维模式。")]),s._v(" "),a("p",[s._v("用面向对象思想思考“如何设计车”：")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305151809214","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305151809214.png",loading:"lazy"}})]),s._v(" "),a("p",[s._v("自然地，我们就会从“车由什么组成”开始思考。发现，车由如下结构组成：")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305152504316","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305152504316.png",loading:"lazy"}})]),s._v(" "),a("p",[s._v("我们找轮胎厂完成制造轮胎的步骤，发动机厂完成制造发动机的步骤，...；这样，大家可以同时进行车的制造，最终进行组装，大大提高了效率。但是，具体到轮胎厂的一个流水线操作，仍然是有步骤的，还是离不开面向过程思维！")]),s._v(" "),a("p",[s._v("因此，"),a("strong",[s._v("面向对象可以帮助我们从宏观上把握、从整体上分析整个系统。")]),s._v(" 但是，具体到实现部分的微观操作（就是一个个方法），仍然需要面向过程的思路去处理。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意：")]),s._v(" "),a("p",[s._v("我们千万不要把面向过程和面向对象对立起来。他们是相辅相成的。面向对象离不开面向过程！")])]),s._v(" "),a("p",[a("strong",[s._v("类比举例2：人把大象装进冰箱")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("面向过程")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1.打开冰箱\n\n2.把大象装进冰箱\n\n3.把冰箱门关住\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("面向对象")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("人{\n    打开（冰箱）{\n\t\t冰箱.开门();\t\n    }\n    操作(大象){\n             大象.进入(冰箱);\n    }\n    关闭(冰箱){   \n          冰箱.关门();     \n    }\n}\n\n冰箱{\n     开门(){ }  \n     关门(){ }\n}\n\n大象{\n     进入(冰箱){  }\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])])])]),s._v(" "),a("p",[s._v("**练习：**抽象出下面系统中的“类”及其关系")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305152455163","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305152455163.png",loading:"lazy"}})]),s._v(" "),a("h3",{attrs:{id:"_1-3-如何掌握这种思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-如何掌握这种思想"}},[s._v("#")]),s._v(" 1.3 如何掌握这种思想？")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305152524823","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305152524823.png",loading:"lazy"}})]),s._v(" "),a("h2",{attrs:{id:"_2-java语言的基本元素-类和对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-java语言的基本元素-类和对象"}},[s._v("#")]),s._v(" 2. Java语言的基本元素：类和对象")]),s._v(" "),a("h3",{attrs:{id:"_2-1-引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-引入"}},[s._v("#")]),s._v(" 2.1 引入")]),s._v(" "),a("p",[s._v("人认识世界，其实就是面向对象的。比如，我们认识一下美人鱼（都没见过）")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305152753576","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305152753576.png",loading:"lazy"}})]),s._v(" "),a("p",[s._v("经过“仔细学习”，发现美人鱼通常具备一些特征：")]),s._v(" "),a("ul",[a("li",[s._v("女孩")]),s._v(" "),a("li",[s._v("有鱼尾")]),s._v(" "),a("li",[s._v("美丽")])]),s._v(" "),a("p",[s._v("这个总结的过程，其实是"),a("code",[s._v("抽象化")]),s._v("的过程。抽象出来的美人鱼的特征，可以归纳为一个"),a("code",[s._v("美人鱼类")]),s._v("。而图片中的都是这个类呈现出来的"),a("code",[s._v("具体的对象")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_2-2-类和对象概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-类和对象概述"}},[s._v("#")]),s._v(" 2.2 类和对象概述")]),s._v(" "),a("p",[a("code",[s._v("类(Class)")]),s._v("和"),a("code",[s._v("对象(Object)")]),s._v("是面向对象的核心概念。")]),s._v(" "),a("p",[a("strong",[s._v("1、什么是类")])]),s._v(" "),a("p",[a("strong",[s._v("类")]),s._v("：具有相同特征的事物的抽象描述，是"),a("code",[s._v("抽象的")]),s._v("、概念上的定义。")]),s._v(" "),a("p",[a("strong",[s._v("2、什么是对象")])]),s._v(" "),a("p",[a("strong",[s._v("对象")]),s._v("：实际存在的该类事物的"),a("code",[s._v("每个个体")]),s._v("，是"),a("code",[s._v("具体的")]),s._v("，因而也称为"),a("code",[s._v("实例(instance)")]),s._v("。")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305153119400","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305153119400.png",loading:"lazy"}})]),s._v(" "),a("p",[s._v("可以理解为："),a("code",[s._v("类 => 抽象概念的人")]),s._v("；"),a("code",[s._v("对象 => 实实在在的某个人")])]),s._v(" "),a("h3",{attrs:{id:"_2-3-类的成员概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-类的成员概述"}},[s._v("#")]),s._v(" 2.3 类的成员概述")]),s._v(" "),a("blockquote",[a("p",[s._v("面向对象程序设计的重点是"),a("code",[s._v("类的设计")])]),s._v(" "),a("p",[s._v("类的设计，其实就是"),a("code",[s._v("类的成员的设计")])])]),s._v(" "),a("p",[s._v("现实世界的生物体，大到鲸鱼，小到蚂蚁，都是由最基本的"),a("code",[s._v("细胞")]),s._v("构成的。同理，Java代码世界是由诸多个不同功能的"),a("code",[s._v("类")]),s._v("构成的。")]),s._v(" "),a("p",[s._v("现实生物世界中的细胞又是由什么构成的呢？细胞核、细胞质、…")]),s._v(" "),a("p",[s._v("Java中用类class来描述事物也是如此。类，是一组相关"),a("code",[s._v("属性")]),s._v("和"),a("code",[s._v("行为")]),s._v("的集合，这也是类最基本的两个成员。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("属性")]),s._v("：该类事物的状态信息。对应类中的"),a("code",[s._v("成员变量")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("成员变量 <=> 属性 <=> Field")])])])]),s._v(" "),a("li",[a("strong",[s._v("行为")]),s._v("：该类事物要做什么操作，或者基于事物的状态能做什么。对应类中的"),a("code",[s._v("成员方法")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("(成员)方法 <=> 函数 <=> Method")])])])])]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305154814273","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305154814273.png",loading:"lazy"}})]),s._v(" "),a("p",[s._v("举例：")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305154827453","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305154827453.png",loading:"lazy"}})]),s._v(" "),a("h3",{attrs:{id:"_2-4-面向对象完成功能的三步骤-重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-面向对象完成功能的三步骤-重要"}},[s._v("#")]),s._v(" 2.4 面向对象完成功能的三步骤（重要）")]),s._v(" "),a("h4",{attrs:{id:"步骤1-类的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤1-类的定义"}},[s._v("#")]),s._v(" 步骤1：类的定义")]),s._v(" "),a("p",[s._v("类的定义使用关键字：class。格式如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[修饰符] class 类名{\n\t属性声明;\n    方法声明;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("举例1：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public class Person{\n    //声明属性age\n    int age ;\t                   \n    \n    //声明方法showAge()\n    public void eat() {        \n\t    System.out.println("人吃饭");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("举例2：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public class Dog{\n    //声明属性\n\tString type; //种类\n\tString nickName; //昵称\n\tString hostName; //主人名称\n\t\n    //声明方法\n\tpublic void eat(){ //吃东西\n\t\tSystem.out.println("狗狗进食");\t\t\n\t}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public class Person{\n    String name;\n    char gender;\n    Dog dog;\n    \n    //喂宠物\n    public void feed(){\n        dog.eat();\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"步骤2-对象的创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤2-对象的创建"}},[s._v("#")]),s._v(" 步骤2：对象的创建")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305155207657","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305155207657.png",loading:"lazy"}})]),s._v(" "),a("ul",[a("li",[a("p",[s._v("创建对象，使用关键字："),a("strong",[s._v("new")])])]),s._v(" "),a("li",[a("p",[s._v("创建对象语法：")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//方式1：给创建的对象命名\n//把创建的对象用一个引用数据类型的变量保存起来，这样就可以反复使用这个对象了\n类名 对象名 = new 类名();\n\n//方式2：\nnew 类名()//也称为匿名对象\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[s._v("举例")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class PersonTest{\n\tpublic static void main(String[] args){\n\t\t//创建Person类的对象\n\t\tPerson per = new Person();\n\t\t//创建Dog类的对象\n\t\tDog dog = new Dog();\n\t}\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"步骤3-对象调用属性或方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤3-对象调用属性或方法"}},[s._v("#")]),s._v(" 步骤3：对象调用属性或方法")]),s._v(" "),a("ul",[a("li",[s._v("对象是类的一个"),a("strong",[s._v("实例")]),s._v("，必然具备该类事物的属性和行为（即方法）。")]),s._v(" "),a("li",[s._v('使用"'),a("code",[s._v("对象名.属性")]),s._v('" 或 "'),a("code",[s._v("对象名.方法")]),s._v('"的方式访问对象成员（包括属性和方法）')])]),s._v(" "),a("p",[s._v("举例1：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('//声明Animal类\npublic class Animal { //动物类\n    public int legs;\n\n    public void eat() {\n        System.out.println("Eating.");\n    }\n\n    public void move() {\n        System.out.println("Move.");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//声明测试类\npublic class AnimalTest {\n    public static void main(String args[]) {\n        //创建对象\n        Animal xb = new Animal();\n        xb.legs = 4;//访问属性\n        System.out.println(xb.legs);\n        xb.eat();//访问方法\n        xb.move();//访问方法\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("举例2：针对前面步骤1的举例2：类的实例化（创建类的对象）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public class Game{\n    public static void main(String[] args){\n        Person p = new Person();\n        //通过Person对象调用属性\n        p.name = "康师傅";\n        p.gender = \'男\';\n        p.dog = new Dog(); //给Person对象的dog属性赋值\n        \n        //给Person对象的dog属性的type、nickname属性赋值\n        p.dog.type = "柯基犬";\n        p.dog.nickName = "小白";\n        \n        //通过Person对象调用方法\n        p.feed();\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"_2-5-匿名对象-anonymous-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-匿名对象-anonymous-object"}},[s._v("#")]),s._v(" 2.5 匿名对象 (anonymous object)")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("我们也可以不定义对象的句柄，而直接调用这个对象的方法。这样的对象叫做匿名对象。")]),s._v(" "),a("ul",[a("li",[s._v("如：new Person().shout();")])])]),s._v(" "),a("li",[a("p",[s._v("使用情况")]),s._v(" "),a("ul",[a("li",[s._v("如果一个对象只需要进行一次方法调用，那么就可以使用匿名对象。")]),s._v(" "),a("li",[s._v("我们经常将匿名对象作为实参传递给一个方法调用。")])])])]),s._v(" "),a("h2",{attrs:{id:"_3-类的成员之一-成员变量-field"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-类的成员之一-成员变量-field"}},[s._v("#")]),s._v(" 3. 类的成员之一：成员变量(field)")]),s._v(" "),a("h3",{attrs:{id:"_3-1-如何声明成员变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-如何声明成员变量"}},[s._v("#")]),s._v(" 3.1 如何声明成员变量")]),s._v(" "),a("ul",[a("li",[s._v("语法格式：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[修饰符1] class 类名{\n    [修饰符2] 数据类型 成员变量名 [= 初始化值]; \n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("说明：")]),s._v(" "),a("ul",[a("li",[s._v("位置要求：必须在类中，方法外")]),s._v(" "),a("li",[s._v("修饰符2(暂不考虑)\n"),a("ul",[a("li",[s._v("常用的权限修饰符有：private、缺省、protected、public")]),s._v(" "),a("li",[s._v("其他修饰符：static、final")])])]),s._v(" "),a("li",[s._v("数据类型\n"),a("ul",[a("li",[s._v("任何基本数据类型(如int、Boolean) 或 任何引用数据类型。")])])]),s._v(" "),a("li",[s._v("成员变量名\n"),a("ul",[a("li",[s._v("属于标识符，符合命名规则和规范即可。")])])]),s._v(" "),a("li",[s._v("初始化值\n"),a("ul",[a("li",[s._v("根据情况，可以显式赋值；也可以不赋值，使用默认值")])])])]),s._v(" "),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public class Person{\n\tprivate int age;             //声明private变量 age\n\tpublic String name;    //声明public变量 name\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_3-2-成员变量-vs-局部变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-成员变量-vs-局部变量"}},[s._v("#")]),s._v(" 3.2 成员变量 vs 局部变量")]),s._v(" "),a("p",[a("strong",[s._v("1、变量的分类：成员变量与局部变量")])]),s._v(" "),a("ul",[a("li",[s._v("在方法体外，类体内声明的变量称为成员变量。")]),s._v(" "),a("li",[s._v("在方法体内部等位置声明的变量称为局部变量。")])]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305161049511","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305161049511.png",loading:"lazy"}})]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305161056032","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305161056032.png",loading:"lazy"}})]),s._v(" "),a("blockquote",[a("p",[s._v("其中，static可以将成员变量分为两大类，静态变量和非静态变量。其中静态变量又称为类变量，非静态变量又称为实例变量或者属性。接下来先学习实例变量。")])]),s._v(" "),a("p",[a("strong",[s._v("2、成员变量 与 局部变量 的对比")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("相同点")]),s._v(" "),a("ul",[a("li",[s._v("变量声明的格式相同： 数据类型  变量名 = 初始化值")])]),s._v(" "),a("ul",[a("li",[a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("   \t变量必须先声明、后初始化、再使用。\n")])])])])]),s._v(" "),a("ul",[a("li",[s._v("变量都有其对应的作用域。只在其作用域内是有效的")])])]),s._v(" "),a("li",[a("p",[s._v("不同点")])])]),s._v(" "),a("p",[s._v("1、声明位置和方式\n（1）成员变量：在类中方法外\n（2）局部变量：在方法体{}中或方法的形参列表、代码块中")]),s._v(" "),a("p",[s._v("2、作用域\n（1）成员变量：通过对象就可以使用，本类中直接调用，其他类中“对象.实例变量”\n（2）局部变量：出了作用域就不能使用")]),s._v(" "),a("p",[a("strong",[s._v("3、对象属性的默认初始化赋值")])]),s._v(" "),a("p",[s._v("当一个对象被创建时，会对其中各种类型的成员变量自动进行初始化赋值。")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305161330301","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305161330301.png",loading:"lazy"}})]),s._v(" "),a("p",[a("strong",[s._v("案例1:")])]),s._v(" "),a("p",[s._v("云课第四章4.6输出图书相关信息")]),s._v(" "),a("p",[a("strong",[s._v("案例2:")])]),s._v(" "),a("p",[s._v("声明员工类Employee，包含属性:编号id、姓名name、年龄age、薪资salary")]),s._v(" "),a("p",[s._v("声明EmployeeTest测试类,并在main方法中，创建2个员工对象，并为属性赋值，打印两个员工的信息")]),s._v(" "),a("p",[a("strong",[s._v("案例3:")])]),s._v(" "),a("p",[s._v("(1)声明一个MyDate类，有属性:年year，月month,日day")]),s._v(" "),a("p",[s._v("(2)声明一个Employee类，包含属性:编码、姓名、年龄、薪资、生日（数据类型是MyDate）")]),s._v(" "),a("p",[s._v("(3)在EmployeeTest类中，创建两个对象，并为他们的姓名和生日赋值，并显示")]),s._v(" "),a("h2",{attrs:{id:"_4-类的成员之二-方法-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-类的成员之二-方法-method"}},[s._v("#")]),s._v(" 4. 类的成员之二：方法(method)")]),s._v(" "),a("h3",{attrs:{id:"_4-1方法的引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1方法的引入"}},[s._v("#")]),s._v(" 4.1方法的引入")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305164226764","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305164226764.png",loading:"lazy"}})]),s._v(" "),a("p",[s._v("《街霸》游戏中，每次人物出拳、出脚或跳跃等动作都需要编写50-80行的代码，在每次出拳、出脚或跳跃的地方都需要重复地编写这50-80行代码，这样程序会变得"),a("code",[s._v("很臃肿")]),s._v("，可读性也非常差。为了解决代码重复编写的问题，可以将出拳、出脚或跳跃的代码提取出来放在一个{}中，并为这段代码起个名字，这样在每次的出拳、出脚或跳跃的地方通过这个名字来调用这个{}的代码就可以了。")]),s._v(" "),a("p",[s._v("上述过程中，所提取出来的代码可以被看作是程序中定义的一个方法，程序在需要出拳、出脚或跳跃时调用该方法即可。")]),s._v(" "),a("h3",{attrs:{id:"_4-2-方法-method、函数-的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-方法-method、函数-的理解"}},[s._v("#")]),s._v(" 4.2 方法(method、函数)的理解")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("方法")]),s._v("是类或对象行为特征的抽象，用来完成某个 功能操作。在某些语言中也称为"),a("code",[s._v("函数")]),s._v("或"),a("code",[s._v("过程")]),s._v("。")]),s._v(" "),a("li",[s._v("方法用来封装某一个功能")]),s._v(" "),a("li",[s._v("将功能封装为方法的目的是，可以"),a("code",[s._v("实现代码重用，减少冗余，简化代码")])]),s._v(" "),a("li",[s._v("Java里的方法"),a("code",[s._v("不能独立存在")]),s._v("，所有的方法必须定义在类里。")]),s._v(" "),a("li",[s._v("举例1：\n"),a("ul",[a("li",[s._v("Math.random()的random()方法")]),s._v(" "),a("li",[s._v("Math.sqrt(x)的sqrt(x)方法")]),s._v(" "),a("li",[s._v("System.out.println(x)的println(x)方法")]),s._v(" "),a("li",[s._v("new Scanner(System.in).nextInt()的nextInt()方法")]),s._v(" "),a("li",[s._v("Arrays类中的binarySearch()方法、sort()方法、equals()方法")])])]),s._v(" "),a("li",[s._v("举例2:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public class Person{\n    private int age;\n    public int getAge()  {  //声明方法getAge()\n\t\treturn age; \n    }\n    public void setAge(int i) {  //声明方法setAge\n\t\tage = i;        //将参数i的值赋给类的成员变量age\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"_4-3-如何声明方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-如何声明方法"}},[s._v("#")]),s._v(" 4.3 如何声明方法")]),s._v(" "),a("p",[a("strong",[s._v("1、声明方法的语法格式")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[修饰符] 返回值类型 方法名([形参列表])[throws 异常列表]{\n        方法体的功能代码\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("（1）一个完整的方法 = 方法头 + 方法体。")]),s._v(" "),a("ul",[a("li",[s._v("方法头就是"),a("code",[s._v("[修饰符] 返回值类型 方法名([形参列表])[throws 异常列表]")]),s._v("，也称为"),a("code",[s._v("方法签名")]),s._v("。通常调用方法时只需要关注方法头就可以，从方法头可以看出这个方法的功能和调用格式。")]),s._v(" "),a("li",[s._v("方法体就是方法被调用后要执行的代码。对于调用者来说，不了解方法体如何实现的，并不影响方法的使用。")])]),s._v(" "),a("p",[a("strong",[s._v("（2）方法头可能包含5个部分")])]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("修饰符")]),s._v("：可选的。方法的修饰符也有很多，例如：public、protected、private、static、abstract、native、final、synchronized等，后面会一一学习。")]),s._v(" "),a("ul",[a("li",[s._v("其中，权限修饰符有public、protected、private。在讲封装性之前，我们先默认使用pulbic修饰方法。")]),s._v(" "),a("li",[s._v("其中，根据是否有static，可以将方法分为静态方法和非静态方法。其中静态方法又称为类方法，非静态方法又称为实例方法。咱们在讲static前先学习实例方法。")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("返回值类型")]),s._v("： 表示方法运行的结果的数据类型，方法执行后将结果返回到调用者。")]),s._v(" "),a("ul",[a("li",[s._v("无返回值，则声明：void")]),s._v(" "),a("li",[s._v("有返回值，则声明出返回值类型（可以是任意类型）。与方法体中“"),a("code",[s._v("return 返回值")]),s._v("”搭配使用")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("方法名")]),s._v("：属于标识符，命名时遵循标识符命名规则和规范，“见名知意”")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("形参列表")]),s._v("：表示完成方法体功能时需要外部提供的数据列表。可以包含零个，一个或多个参数。")]),s._v(" "),a("ul",[a("li",[s._v("无论是否有参数，()不能省略")]),s._v(" "),a("li",[s._v("如果有参数，每一个参数都要指定数据类型和参数名，多个参数之间使用逗号分隔，例如：\n"),a("ul",[a("li",[s._v("一个参数： (数据类型  参数名)")]),s._v(" "),a("li",[s._v("二个参数： (数据类型1  参数1,  数据类型2  参数2)")])])]),s._v(" "),a("li",[s._v("参数的类型可以是基本数据类型、引用数据类型")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("throws 异常列表")]),s._v("：之后章节再讲")])])]),s._v(" "),a("p",[a("strong",[s._v("（3）方法体")]),s._v("：方法体必须有{}括起来，在{}中编写完成方法功能的代码")]),s._v(" "),a("p",[a("strong",[s._v("（4）关于方法体中return语句的说明：")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("return语句的作用是结束方法的执行，并将方法的结果返回去")])]),s._v(" "),a("li",[a("p",[s._v("如果返回值类型不是void，方法体中必须保证一定有 return 返回值; 语句，并且要求该返回值结果的类型与声明的返回值类型一致或兼容。")])]),s._v(" "),a("li",[a("p",[s._v("如果返回值类型为void时，方法体中可以没有return语句，如果要用return语句提前结束方法的执行，那么return后面不能跟返回值，直接写return ; 就可以。")])]),s._v(" "),a("li",[a("p",[s._v("return语句后面就不能再写其他代码了，否则会报错：Unreachable code")])])]),s._v(" "),a("p",[s._v("补充：方法的分类：按照是否有形参及返回值")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305164902191","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305164902191.png",loading:"lazy"}})]),s._v(" "),a("p",[a("strong",[s._v("2、代码示例：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * 方法定义案例演示\n */\npublic class MethodDefineDemo {\n    /**\n     * 无参无返回值方法的演示\n     */\n    public void sayHello(){\n        System.out.println("hello");\n    }\n\n    /**\n     * 有参无返回值方法的演示\n     * @param length int 第一个参数，表示矩形的长\n     * @param width int 第二个参数，表示矩形的宽\n     * @param sign char 第三个参数，表示填充矩形图形的符号\n     */\n    public void printRectangle(int length, int width, char sign){\n        for (int i = 1; i <= length ; i++) {\n            for(int j=1; j <= width; j++){\n                System.out.print(sign);\n            }\n            System.out.println();\n        }\n    }\n\n    /**\n     * 无参有返回值方法的演示\n     * @return\n     */\n    public int getIntBetweenOneToHundred(){\n        return (int)(Math.random()*100+1);\n    }\n    \n    /**\n     * 有参有返回值方法的演示\n     * @param a int 第一个参数，要比较大小的整数之一\n     * @param b int 第二个参数，要比较大小的整数之二\n     * @return int 比较大小的两个整数中较大者的值\n     */\n    public int max(int a, int b){\n        return a > b ? a : b;\n    }\n }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br")])]),a("h3",{attrs:{id:"_4-4-如何调用实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-如何调用实例方法"}},[s._v("#")]),s._v(" 4.4 如何调用实例方法")]),s._v(" "),a("p",[s._v("方法通过方法名被调用，且只有被调用才会执行。")]),s._v(" "),a("p",[a("strong",[s._v("1、方法调用语法格式")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("对象.方法名([实参列表])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("2、示例")])]),s._v(" "),a("p",[s._v("举例1：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * 方法调用案例演示\n */\npublic class MethodInvokeDemo {\n    public static void main(String[] args) {\n        //创建对象\n        MethodDefineDemo md = new MethodDefineDemo();\n\n        System.out.println("-----------------------方法调用演示-------------------------");\n\n        //调用MethodDefineDemo类中无参无返回值的方法sayHello\n        md.sayHello();\n        md.sayHello();\n        md.sayHello();\n        //调用一次，执行一次，不调用不执行\n\n        System.out.println("------------------------------------------------");\n        //调用MethodDefineDemo类中有参无返回值的方法printRectangle\n        md.printRectangle(5,10,\'@\');\n\n        System.out.println("------------------------------------------------");\n        //调用MethodDefineDemo类中无参有返回值的方法getIntBetweenOneToHundred\n        md.getIntBetweenOneToHundred();//语法没问题，就是结果丢失\n\n        int num = md.getIntBetweenOneToHundred();\n        System.out.println("num = " + num);\n\n        System.out.println(md.getIntBetweenOneToHundred());\n        //上面的代码调用了getIntBetweenOneToHundred三次，这个方法执行了三次\n\n        System.out.println("------------------------------------------------");\n        //调用MethodDefineDemo类中有参有返回值的方法max\n        md.max(3,6);//语法没问题，就是结果丢失\n        \n        int bigger = md.max(5,6);\n        System.out.println("bigger = " + bigger);\n\n        System.out.println("8,3中较大者是：" + md.max(8,9));\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br")])]),a("p",[s._v("举例2：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('//1、创建Scanner的对象\nScanner input = new Scanner(System.in);//System.in默认代表键盘输入\n\n//2、提示输入xx\nSystem.out.print("请输入一个整数："); //对象.非静态方法(实参列表)\n\n//3、接收输入内容\nint num = input.nextInt();  //对象.非静态方法()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"_4-5-使用的注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-使用的注意点"}},[s._v("#")]),s._v(" 4.5  使用的注意点")]),s._v(" "),a("p",[s._v("（1）必须先声明后使用，且方法必须定义在类的内部")]),s._v(" "),a("p",[s._v("（2）调用一次就执行一次，不调用不执行。")]),s._v(" "),a("p",[s._v("（3）方法中可以调用类中的方法或属性，不可以在方法内部定义方法。")]),s._v(" "),a("p",[s._v("正确示例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("类{\n    方法1(){\n        \n    }\n    方法2(){\n        \n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("错误示例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("类{\n    方法1(){\n        方法2(){  //位置错误\n        \n   \t\t}\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"_4-6-关键字return的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-关键字return的使用"}},[s._v("#")]),s._v(" 4.6 关键字return的使用")]),s._v(" "),a("ul",[a("li",[s._v("return在方法中的作用：\n"),a("ul",[a("li",[s._v("作用1：结束一个方法")]),s._v(" "),a("li",[s._v("作用2：结束一个方法的同时，可以返回数据给方法的调用者")])])]),s._v(" "),a("li",[s._v("注意点：在return关键字的直接后面不能声明执行语句")])]),s._v(" "),a("p",[a("strong",[s._v("案例1:")])]),s._v(" "),a("p",[s._v("(1)创建Person类的对象，设置该对象的name、age和gender属性")]),s._v(" "),a("p",[s._v('调用study方法，输出字符串"studying";')]),s._v(" "),a("p",[s._v("调用showAge()方法，返回age值")]),s._v(" "),a("p",[s._v("调用addAge(int addAge)方法给对象的age属性值增加addAge岁.比如:2岁")]),s._v(" "),a("p",[a("strong",[s._v("案例2:")])]),s._v(" "),a("p",[s._v("云课4.4:简单的学生管理系统")]),s._v(" "),a("p",[a("strong",[s._v("案例3:")])]),s._v(" "),a("p",[s._v("云课4.7：学生管理系统")]),s._v(" "),a("h3",{attrs:{id:"方法的重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法的重载"}},[s._v("#")]),s._v(" 方法的重载")]),s._v(" "),a("p",[s._v("练习：方法重载的练习")]),s._v(" "),a("p",[s._v("用已有的知识编写下面代码：")]),s._v(" "),a("p",[s._v("需求：")]),s._v(" "),a("p",[s._v("定义一个方法求两个整数的和")]),s._v(" "),a("p",[s._v("定义一个方法求三个整数的和")]),s._v(" "),a("p",[s._v("定义一个方法求四个整数的和")]),s._v(" "),a("h4",{attrs:{id:"什么是方法重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是方法重载"}},[s._v("#")]),s._v(" 什么是方法重载")]),s._v(" "),a("p",[s._v("在同一个类中，定义了多个同名的方法，这些同名的方法具有多种功能")]),s._v(" "),a("p",[s._v("每个方法具有不同的参数类型或者参数个数，这些同名的方法，就构成了重载关系")]),s._v(" "),a("p",[a("code",[s._v("简单一点来说")]),s._v("：方法名相同，参数列表不同。与返回值无关")]),s._v(" "),a("p",[s._v("参数不同：个数不同、类型不同、顺序不同")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230119002548699","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230119002548699.png",loading:"lazy"}})]),s._v(" "),a("p",[s._v("Java虚拟机会通过参数的不同来区分同名的方法")]),s._v(" "),a("p",[s._v("**案例1:**区分以下方法是否构成重载")]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305183454745","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305183454745.png",loading:"lazy"}})]),s._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20230305183545644","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230305183545644.png",loading:"lazy"}})]),s._v(" "),a("p",[a("strong",[s._v("案例2：根据类型比较")])]),s._v(" "),a("p",[s._v("需求：使用方法重载的思想，设计比较两个整数是否相同的方法")]),s._v(" "),a("p",[s._v("要求：兼容全整数(byte short,int ,long)")])])}),[],!1,null,null,null);a.default=e.exports}}]);