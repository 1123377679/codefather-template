(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{345:function(a,s,t){"use strict";t.r(s);var n=t(4),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"第二章-数据类型和运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二章-数据类型和运算符"}},[a._v("#")]),a._v(" 第二章 数据类型和运算符")]),a._v(" "),s("h1",{attrs:{id:"java基础语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java基础语法"}},[a._v("#")]),a._v(" JAVA基础语法")]),a._v(" "),s("p",[a._v("[TOC]")]),a._v(" "),s("h2",{attrs:{id:"注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),s("h3",{attrs:{id:"为什么要有注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要有注释"}},[a._v("#")]),a._v(" 为什么要有注释？")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20230212143627550","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230212143627550.png",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20230212143712230","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230212143712230.png",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{id:"注释的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释的概念"}},[a._v("#")]),a._v(" 注释的概念")]),a._v(" "),s("p",[a._v("注释是在程序指定位置添加的说明性信息")]),a._v(" "),s("p",[a._v("简单理解，就是对代码的一种解释")]),a._v(" "),s("p",[s("strong",[a._v("单行注释:")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//注释信息\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("strong",[a._v("多行注释:")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/*\n注释信息\n*/\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[s("strong",[a._v("文档注释：")])]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20230212143836284","data-src":"E:%5Cmd%E5%9B%BE%E7%89%87%5Cimage-20230212143836284.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("注释的使用细节")]),a._v(" "),s("p",[a._v("注释内容不会参与编译和运行，仅仅是对代码的解释说明")]),a._v(" "),s("p",[a._v("不管是单行注释还是多行注释，在书写的时候都不要嵌套")]),a._v(" "),s("h2",{attrs:{id:"关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[a._v("#")]),a._v(" 关键字")]),a._v(" "),s("p",[s("strong",[a._v("被Java赋予了特定含义的英文单词")])]),a._v(" "),s("p",[a._v("关键字字母"),s("code",[a._v("全部小写")])]),a._v(" "),s("p",[a._v("常用的代码编辑器，针对关键字有特殊的颜色标记，非常直观")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20230212145403754","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230212145403754.png",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{id:"class关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class关键字"}},[a._v("#")]),a._v(" Class关键字")]),a._v(" "),s("p",[a._v("class:用于(创建/定义)一个类，类是Java最基本的组成单元")]),a._v(" "),s("p",[a._v("类就类似于人类的细胞，人类是有很多种细胞组成的")]),a._v(" "),s("p",[a._v("Java项目也是通过无数的类来组成的")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20230212150017303","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230212150017303.png",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("1.什么是关键字?")]),a._v(" "),s("p",[a._v("​\t被Java赋予了特定含义的英文单词，它会在编辑器里面高亮显示")]),a._v(" "),s("p",[a._v("2.关键字的特点?")]),a._v(" "),s("ul",[s("li",[a._v("关键字的字母全部小写")]),a._v(" "),s("li",[a._v("常用的代码编辑器，对关键字有特殊颜色标记")])]),a._v(" "),s("p",[a._v("3.class关键字是什么意思?")]),a._v(" "),s("p",[a._v("​\tclass关键字表示定义一个类，后面跟随类名")]),a._v(" "),s("h2",{attrs:{id:"字面量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字面量"}},[a._v("#")]),a._v(" 字面量")]),a._v(" "),s("p",[s("code",[a._v("告诉程序员：数据在程序中的书写格式")])]),a._v(" "),s("p",[a._v("字面量类型：")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("字面量类型")]),a._v(" "),s("th",[a._v("说明")]),a._v(" "),s("th",[a._v("举例")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("整数类型")]),a._v(" "),s("td",[a._v("不带小数点的数字")]),a._v(" "),s("td",[a._v("666，-88")])]),a._v(" "),s("tr",[s("td",[a._v("小数类型")]),a._v(" "),s("td",[a._v("带小数点的数字")]),a._v(" "),s("td",[a._v("13.14，-5.21，5.20")])]),a._v(" "),s("tr",[s("td",[a._v("字符串类型")]),a._v(" "),s("td",[a._v("用双引号括起来的内容")]),a._v(" "),s("td",[a._v('"helloworld"')])]),a._v(" "),s("tr",[s("td",[a._v("字符类型")]),a._v(" "),s("td",[a._v("用单引号括起来的，内容只能有一个")]),a._v(" "),s("td",[a._v("'A','a'")])]),a._v(" "),s("tr",[s("td",[a._v("布尔类型")]),a._v(" "),s("td",[a._v("布尔值，表示真假")]),a._v(" "),s("td",[a._v("只有两个值：true，false")])]),a._v(" "),s("tr",[s("td",[a._v("空类型")]),a._v(" "),s("td",[a._v("一个特殊的值，空值")]),a._v(" "),s("td",[a._v("值是null")])])])]),a._v(" "),s("h2",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),s("h3",{attrs:{id:"什么是变量呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是变量呢"}},[a._v("#")]),a._v(" 什么是变量呢？")]),a._v(" "),s("p",[a._v("变量:在程序的执行过程中，其值有可能发生改变的量(数据)")]),a._v(" "),s("h3",{attrs:{id:"变量使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量使用场景"}},[a._v("#")]),a._v(" 变量使用场景？")]),a._v(" "),s("p",[a._v("当某数据经常发生改变时，我们也可以用变量存储，当数据变化时，只要修改变量里面记录的值即可")]),a._v(" "),s("h3",{attrs:{id:"变量的定义格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的定义格式"}},[a._v("#")]),a._v(" 变量的定义格式")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("数据类型 变量名 = 数据值;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20230212162436989","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20230212162436989.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("目前先给大家介绍两个数据类型:")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("数据类型")]),a._v(" "),s("th",[a._v("关键字")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("整数")]),a._v(" "),s("td",[a._v("int")])]),a._v(" "),s("tr",[s("td",[a._v("浮点数")]),a._v(" "),s("td",[a._v("double")])])])]),a._v(" "),s("h3",{attrs:{id:"变量的基本用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的基本用法"}},[a._v("#")]),a._v(" 变量的基本用法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//定义变量")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//数据类型 变量名 = 数据值;")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//数据类型:限制了变量能存储数据的类型")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//变量名:就是存储空间的名字,作用方便之后的代码使用")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//数据值:真正存储在变量中的数据")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//等号:赋值。把右边的数据赋值给左边的变量")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" b  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("h3",{attrs:{id:"变量的使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的使用方式"}},[a._v("#")]),a._v(" 变量的使用方式")]),a._v(" "),s("h4",{attrs:{id:"第一种-输出打印"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一种-输出打印"}},[a._v("#")]),a._v(" 第一种:输出打印")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int a = 10;\nSystem.out.println(a);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h4",{attrs:{id:"第二种-参与计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二种-参与计算"}},[a._v("#")]),a._v(" 第二种:参与计算")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int a = 10;\nint b = 20;\nSystem.out.println(a + b);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h4",{attrs:{id:"第三种-修改记录的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三种-修改记录的值"}},[a._v("#")]),a._v(" 第三种：修改记录的值")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int a = 10;\nSystem.out.println(a);//10\na = 20;\nSystem.out.println(a);//20\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"变量的注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的注意事项"}},[a._v("#")]),a._v(" 变量的注意事项")]),a._v(" "),s("p",[a._v("只能存一个值")]),a._v(" "),s("p",[a._v("变量名不允许重复定义")]),a._v(" "),s("p",[a._v("一条语句可以定义多个变量")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int a,b,c = 10;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("变量使用之前一定要进行赋值")]),a._v(" "),s("h3",{attrs:{id:"变量小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量小结"}},[a._v("#")]),a._v(" 变量小结")]),a._v(" "),s("p",[a._v("1.定义格式")]),a._v(" "),s("p",[a._v("数据类型 变量名 = 数据值;")]),a._v(" "),s("p",[a._v("2.使用变量")]),a._v(" "),s("p",[a._v("输出打印")]),a._v(" "),s("p",[a._v("参与计算")]),a._v(" "),s("p",[a._v("修改记录的值")]),a._v(" "),s("p",[a._v("3.使用场景")]),a._v(" "),s("p",[a._v("重复使用某个值")]),a._v(" "),s("p",[a._v("某个数据经常发生改变")]),a._v(" "),s("p",[a._v("4.注意事项")]),a._v(" "),s("p",[a._v("变量只能存一个值")]),a._v(" "),s("h3",{attrs:{id:"变量的练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的练习"}},[a._v("#")]),a._v(" 变量的练习")]),a._v(" "),s("p",[a._v("一开始没有乘客")]),a._v(" "),s("p",[a._v("第一站:上去一位乘客")]),a._v(" "),s("p",[a._v("第二站:上去两位乘客，下来一位乘客")]),a._v(" "),s("p",[a._v("第三站:上去两位乘客，下来一位乘客")]),a._v(" "),s("p",[a._v("第四站:下来一位乘客")]),a._v(" "),s("p",[a._v("第五站:上去一位乘客")]),a._v(" "),s("p",[a._v("请问：到了终点站，车上一共几位乘客")]),a._v(" "),s("h2",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[a._v("#")]),a._v(" 常量")]),a._v(" "),s("p",[a._v("在Java中还有一个概念叫做常量，变量的值是可以改变的，但是常量是不可以改变的")]),a._v(" "),s("p",[s("code",[a._v("常量")]),a._v("：在程序运行过程中，其值不可以发生改变的量")]),a._v(" "),s("p",[s("code",[a._v("格式")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("final 数据类型 常量名 = 数据值;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("code",[a._v("实例")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("final double PI = 3.14；\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("常量用final来修饰，并且赋值之后其值是不能改变的，"),s("strong",[a._v("常量的命名一般来说都是大写")])]),a._v(" "),s("p",[s("code",[a._v("案例")]),a._v(":")]),a._v(" "),s("p",[a._v("计算圆的面积")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("final double PI = 3.14；\nint r = 2;\ndouble area = PI * r * r;\nSystem.out.prinltn(area);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[a._v("常量类型")]),a._v(" "),s("th",[a._v("说明")]),a._v(" "),s("th",[a._v("举例")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("字符串常量")]),a._v(" "),s("td",[a._v("用双引号括起来的内容")]),a._v(" "),s("td",[a._v('"HelloWorld" "lanqiao"')])]),a._v(" "),s("tr",[s("td",[a._v("整数常量")]),a._v(" "),s("td",[a._v("不带小数的数字")]),a._v(" "),s("td",[a._v("666,-88")])]),a._v(" "),s("tr",[s("td",[a._v("小数常量")]),a._v(" "),s("td",[a._v("带小数的数字")]),a._v(" "),s("td",[a._v("13.14,-5.21")])]),a._v(" "),s("tr",[s("td",[a._v("字符常量")]),a._v(" "),s("td",[a._v("用单引号括起来的内容")]),a._v(" "),s("td",[a._v("'A','0','我'")])]),a._v(" "),s("tr",[s("td",[a._v("布尔常量")]),a._v(" "),s("td",[a._v("布尔值，表示真假")]),a._v(" "),s("td",[a._v("只有两个值，true，false")])]),a._v(" "),s("tr",[s("td",[a._v("空常量")]),a._v(" "),s("td",[a._v("一个特殊的值，空值")]),a._v(" "),s("td",[a._v("值是:null")])])])]),a._v(" "),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),s("p",[a._v("在Java中数据类型分为两类，基本数据类型和引用数据类型")]),a._v(" "),s("h3",{attrs:{id:"基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[a._v("#")]),a._v(" 基本数据类型")]),a._v(" "),s("p",[a._v("四类八种")]),a._v(" "),s("p",[a._v("基本数据类型：")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221109224302628","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221109224302628.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("Java语言的数据类型分为:基本数据类型和引用数据类型")]),a._v(" "),s("p",[s("strong",[a._v("数据类型取值范围大小关系:")])]),a._v(" "),s("p",[a._v("double>float>long>int>short>byte")]),a._v(" "),s("p",[a._v("long类型变量:需要加上L标识(尽量大写)")]),a._v(" "),s("p",[a._v("float类型变量:需要加入F标识(尽量大写)")]),a._v(" "),s("h3",{attrs:{id:"输出爱人信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输出爱人信息"}},[a._v("#")]),a._v(" 输出爱人信息")]),a._v(" "),s("p",[a._v("姓名:段某人(String)字符串")]),a._v(" "),s("p",[a._v("年龄:18(int)")]),a._v(" "),s("p",[a._v("性别:女(char)")]),a._v(" "),s("p",[a._v("身高:180(double)")]),a._v(" "),s("p",[a._v("是否单身:否(true)")]),a._v(" "),s("p",[a._v("爱好:xxx()")]),a._v(" "),s("h3",{attrs:{id:"输出电影信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输出电影信息"}},[a._v("#")]),a._v(" 输出电影信息")]),a._v(" "),s("p",[a._v("需求:将(电影名称，主演，年份，评分)四个信息选择不同类型的变量，打印在控制台")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221109225555652","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221109225555652.png",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{id:"输出手机信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输出手机信息"}},[a._v("#")]),a._v(" 输出手机信息")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221109230034819","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221109230034819.png",loading:"lazy"}})]),a._v(" "),s("h2",{attrs:{id:"标识符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[a._v("#")]),a._v(" 标识符")]),a._v(" "),s("h3",{attrs:{id:"标识符概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标识符概述"}},[a._v("#")]),a._v(" 标识符概述")]),a._v(" "),s("p",[a._v("标识符：就是给类，方法，变量起名字的符号")]),a._v(" "),s("p",[s("strong",[a._v("由数字，字母，下划线和美元符号$组成")])]),a._v(" "),s("p",[a._v("不能以数字开头")]),a._v(" "),s("p",[a._v("不能是关键字")]),a._v(" "),s("p",[a._v("区分大小写")]),a._v(" "),s("p",[a._v("判断下面哪些变量不符合规则：")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221225203217764","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221225203217764.png",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{id:"常见的命名约定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的命名约定"}},[a._v("#")]),a._v(" 常见的命名约定")]),a._v(" "),s("p",[a._v("小驼峰命名法:")]),a._v(" "),s("ul",[s("li",[a._v("约定:标识符是一个单词的时候，首字母小写")]),a._v(" "),s("li",[a._v("范例1：name")]),a._v(" "),s("li",[a._v("约定2：标识符由多个单词组成的时候，第一个单词首字母小写，其他单词首字母大写")]),a._v(" "),s("li",[a._v("范例2：firstName")])]),a._v(" "),s("p",[a._v("大驼峰命名法:")]),a._v(" "),s("ul",[s("li",[a._v("约定1:标识符是一个单词的时候，首字母大写")]),a._v(" "),s("li",[a._v("范例1：Student")]),a._v(" "),s("li",[a._v("约定2：标识符由多个单词组成的时候，每个单词的首字母大写")]),a._v(" "),s("li",[a._v("范例2：GoodStudent")])]),a._v(" "),s("h2",{attrs:{id:"类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[a._v("#")]),a._v(" 类型转换")]),a._v(" "),s("h3",{attrs:{id:"自动类型转换-默认的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动类型转换-默认的"}},[a._v("#")]),a._v(" 自动类型转换(默认的)")]),a._v(" "),s("p",[a._v("把一个表示数据"),s("strong",[a._v("范围小的数值")]),a._v("或者"),s("strong",[a._v("变量")]),a._v("赋值给另一个表示数据"),s("strong",[a._v("范围大的变量")])]),a._v(" "),s("p",[a._v("小转大")]),a._v(" "),s("p",[a._v("表示数据范围从小到大")]),a._v(" "),s("p",[a._v("byte<short<int<long<float<double")]),a._v(" "),s("p",[a._v("范例：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int a = 10;\ndouble d = a;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"自动类型转换的两种提升规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动类型转换的两种提升规则"}},[a._v("#")]),a._v(" 自动类型转换的两种提升规则")]),a._v(" "),s("p",[a._v("取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算")]),a._v(" "),s("p",[a._v("byte short char 三种类型的数据在运算的时候，都会直接先提升为int 然后在进行运算")]),a._v(" "),s("p",[a._v("范例：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int a = 10;\ndouble b = 10;\n数据类型? c = a+b;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("byte a = 10;\nbyte b = 10;\n数据类型? c = a+b;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("byte<short<int<long<float<double")]),a._v(" "),s("p",[s("strong",[a._v("总结:")])]),a._v(" "),s("p",[a._v("取值范围:")]),a._v(" "),s("p",[a._v("byte<short<int<long<float<double")]),a._v(" "),s("p",[a._v("什么时候转换:")]),a._v(" "),s("p",[a._v("数据类型不一样，不能进行计算，需要转成一样的才可以计算")]),a._v(" "),s("p",[a._v("转换规则1:")]),a._v(" "),s("p",[a._v("取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算")]),a._v(" "),s("p",[a._v("转换规则2:")]),a._v(" "),s("p",[a._v("byte short char 三种类型的数据在运算的时候，都会直接先提升为int 然后在进行运算")]),a._v(" "),s("p",[s("strong",[a._v("案例:")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("byte b1 = 10;\nbyte b2 = 20;\n数据类型 result = b1+b2;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int i =10;\nlong n = 100L;\ndouble d = 20.0;\n数据类型 result = i+n+d;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("byte b = 10;\nshort s = 20;\nlong n = 100L;\n数据类型 result = b + s +n;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"强制类型转换-强转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强制类型转换-强转"}},[a._v("#")]),a._v(" 强制类型转换(强转)")]),a._v(" "),s("p",[a._v("把一个表示"),s("strong",[a._v("数据范围大的数值")]),a._v("或者"),s("strong",[a._v("变量")]),a._v("赋值给另一个表示数据"),s("strong",[a._v("范围小的变量")])]),a._v(" "),s("p",[a._v("大转小")]),a._v(" "),s("p",[a._v("大转小是不允许直接赋值的，如果一定要这么做就需要加入强制转换")]),a._v(" "),s("ul",[s("li",[a._v("格式：目标数据类型 变量名 = (目标数据类型)值或者变量;")]),a._v(" "),s("li",[a._v("范例:int k = (int)88.88;")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("double a = 12.3;\nint b = (int)a;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("强制类型转换不推荐使用，因为会数据丢失")]),a._v(" "),s("p",[a._v("案例:")]),a._v(" "),s("p",[a._v("编码过程中，不但能将数字赋值给某个变量，还能将一个变量赋值给另一个变量。比如下面代码把整型变量changjiang赋值给整型变量longRiver：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 长江的长度为6397千米")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" changjiang "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6397")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"changjiang="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("changjiang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" longRiver "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" changjiang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 把一个整型变量赋值给另一个整型变量")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"longRiver="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("longRiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("运行上面的测试代码，发现两个整型变量的数值一模一样。")]),a._v(" "),s("p",[a._v("同类型的变量之间互相赋值完全没有问题，麻烦的是给不同类型的变量赋值。要是把整型变量赋值给长整型变量，则发现编译器直接提示错误，此时需要在原变量前面添加“(新类型)”表示强制转换类型。改写后的变量赋值语句就变成了下面这样：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 不同类型的变量相互赋值，需要在原变量前面添加“(新类型)”表示强制转换类型")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" longRiver "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" changjiang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 把整型变量赋值给长整型变量")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("然而，不同类型的变量相互赋值是有风险的，尤其是把高精度的数字赋值给低精度的数字，例如将八字节的长整型数强制转成四字节的整型数，结果只有低位的四个字节保留了下来，而高位的四个字节被舍弃掉了。下面做个实验，先用长整型变量保存世界人口的数量74亿，再把该长整型变量赋值给整型变量，具体代码如下所示：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 截至2018年元旦，世界人口大约有74亿")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" worldPopulation "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7444443881L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"worldPopulation="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("worldPopulation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 把长整型数赋值给整型数会丢失前四个字节")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" shijierenkou "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" worldPopulation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 把长整型数强制转成整型数")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"shijierenkou="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("shijierenkou"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[a._v("运行以上的实验代码，打印出来的变量值见以下日志：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("worldPopulation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7444443881")]),a._v("\nshijierenkou"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1145490711")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("可见长整型数强制转成整型数，结果整个数值都变掉了。")]),a._v(" "),s("p",[a._v("既然整数之间强制转换类型存在问题，小数之间的类型强制转换也不例外。倘若把双精度数强制转换成浮点数，数字精度也会变差。接下来仍然通过实验进行观察，以常见的圆周率为例，它的密率是中国古代数学家祖冲之发现的，其数值为3.1415926，包括小数部分在内共有8位数字。由于double类型的数字精度达到15到16位，因此利用双精度变量保存圆周密率完全没有问题。但是如果将这个密率的双精度变量赋值给浮点变量，又会发生什么情况？下面的代码就演示了把双精度数强制转成浮点数的场景：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3.1415926是中国古代数学家祖冲之求得的圆周率数值，又称祖率")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" zulv "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.1415926")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"zulv="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("zulv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 把双精度数赋值给浮点数会丢失数值精度")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),a._v(" pai "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" zulv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 把双精度数强制转成浮点数")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"pai="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("pai"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[a._v("运行上述实验代码，日志打印的变量值见下：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("zulv"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.1415926")]),a._v("\npai"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.1415925")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("可见浮点变量保存的密率数值变成了3.1415925，与双精度变量相比，末尾的6变为5。之所以密率数值发生变化，是因为float类型的数字精度只有6到7位，而前述密率的总位数达到8位，显然超出了float类型的精度范围，使得强转之后的浮点变量损失了范围外的精度。")]),a._v(" "),s("p",[a._v("除了整数之间互转、小数之间互转以外，还有整数转小数和小数转整数的情况，可是整数与小数互转依然存在数值亏损的问题。譬如一个双精度变量赋值给一个整型变量，由于整型变量没有空间保存小数部分，因此原本双精度变量在小数点后面的数字全被舍弃。以下代码就示范了这种数字类型转换的例子：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" jiage "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9.9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"jiage="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("jiage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 把小数赋值给整型变量，会直接去掉小数点后面部分，不会四舍五入")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" price "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" jiage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 把双精度数强制转成整型数")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"price="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("运行以上的测试代码，日志打印结果如下：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("jiage"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9.9")]),a._v("\nprice"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("果然整型变量丢掉了双精度变量的小数部分，由此可见，不同类型之间的变量互转问题多多，若非必要，一般不进行两个变量的类型强制转换操作。")]),a._v(" "),s("h2",{attrs:{id:"算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[a._v("#")]),a._v(" 算术运算符")]),a._v(" "),s("h3",{attrs:{id:"运算符和表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符和表达式"}},[a._v("#")]),a._v(" 运算符和表达式")]),a._v(" "),s("p",[a._v("运算符:对常量或者变量进行操作的"),s("strong",[a._v("符号")])]),a._v(" "),s("p",[a._v("表达式：")]),a._v(" "),s("p",[a._v("用"),s("strong",[a._v("运算符")]),a._v("把常量或者变量连接起来"),s("strong",[a._v("符合Java语法的式子")]),a._v("就可以被称为表达式")]),a._v(" "),s("p",[a._v("不同运算符连接的表达式体现的是不同类型的表达式。")]),a._v(" "),s("p",[a._v("举例说明：")]),a._v(" "),s("p",[a._v("int a = 10;")]),a._v(" "),s("p",[a._v("int b = 20;")]),a._v(" "),s("p",[a._v("int c = a + b;")]),a._v(" "),s("p",[a._v("+:是"),s("strong",[a._v("运算符")]),a._v("，并且是算术运算符")]),a._v(" "),s("p",[a._v("a+b:是"),s("strong",[a._v("表达式")]),a._v("，由于+是算术运算符，所以这个表达式也被称为算术表达式")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221226215728105","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221226215728105.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("代码演示:")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//定义两个变量\nint a = 6;\nint b = 4;\nSystem.out.println(a+b);\nSystem.out.println(a-b);\nSystem.out.println(a*b);\nSystem.out.println(a/b);\nSystem.out.println(a%b);\n//除法得到的是商，取余得到的是余数\n//整数相除只能得到整数，要想得到小数，必须有浮点数的参与\nSystem.out.println(6.0/4);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("p",[a._v("注意事项：")]),a._v(" "),s("p",[a._v("/和%的区别：两个数据做除法，/取结果的商，%取结果的余数。")]),a._v(" "),s("p",[a._v("整数相除只能得到整数，要想得到小数，必须有浮点数的参与")]),a._v(" "),s("h3",{attrs:{id:"字符的-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符的-操作"}},[a._v("#")]),a._v(' 字符的"+"操作')]),a._v(" "),s("p",[a._v("拿字符在计算机底层"),s("strong",[a._v("对应的数值")]),a._v("来计算的")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221226220005558","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221226220005558.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("算术表达式中包含多个基本数据类型的值的时候，整个算术表达式的类型会自动进行提升。")]),a._v(" "),s("p",[a._v("提升规则:")]),a._v(" "),s("ul",[s("li",[a._v("byte类型，short类型和char类型将被提升到int类型\n"),s("ul",[s("li",[a._v("整个表达式的类型自动提升到表达式中最高等级操作同样的类型")]),a._v(" "),s("li",[a._v("等级顺序：byte,short,char=>int=>long=>float+double")])])])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("char a = 'A';\nchar b = 'a';\nint c = a + b;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"字符串的-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的-操作"}},[a._v("#")]),a._v(' 字符串的"+"操作')]),a._v(" "),s("p",[a._v("案例:")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('System.out.println("lan"+"qiao");//lanqiao\nSystem.out.println("lanqiao"+666);//lanqiao666 字符串\nSystem.out.println(666+"lanqiao");//666lanqiao 字符串\nSystem.out.println(666+"lanqiao"+666);//666lanqiao666 字符串\nSystem.out.println(1+10+"lanqiao");//11lanqiao 字符串\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v('当"+"操作中出现字符串时，这个"+"是'),s("strong",[a._v("字符串连接符")]),a._v("，而不是算术运算")]),a._v(" "),s("ul",[s("li",[a._v('"lanqiao"+666')])]),a._v(" "),s("p",[a._v("在”+”操作中，如果出现了字符串，就是连接运算符，否则就是算术运算。当连续进行“+”操时，从左到右逐个执行。")]),a._v(" "),s("ul",[s("li",[a._v('1+10+"lanqiao"')])]),a._v(" "),s("h2",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[a._v("#")]),a._v(" 赋值运算符")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221226221636410","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221226221636410.png",loading:"lazy"}})]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('//把10赋值给了int类型的变量i\nint i = 10;\nSystem.out.println("i:"+i);\n//+=\n//i+= 20;\ni = i+20;\n\n//注意:扩展的赋值运算符底层隐含了强制类型转换\nshort s =10;\ns+=20;\n//s =(short)(s + 20);\nSystem.out.println("s:"+s);\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[a._v("注意事项:")]),a._v(" "),s("p",[a._v("扩展的赋值运算符"),s("strong",[a._v("隐含")]),a._v("了强制类型转换")]),a._v(" "),s("h2",{attrs:{id:"自增自减运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自增自减运算符"}},[a._v("#")]),a._v(" 自增自减运算符")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221226222046682","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221226222046682.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("代码演示：")]),a._v(" "),s("p",[a._v("单独使用自增运算符")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('int i = 10;\ni++;\n++i;\nSystem.out.println("i:"+i);\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("++,--如果不是单独使用(如在表达式中，或者同时有其他操作)，放在变量前后会存在明显区别")]),a._v(" "),s("p",[a._v("代码演示:")]),a._v(" "),s("p",[a._v("放在变量的前面，先对变量进行+1或者-1，再拿变量的值进行运算")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int a = 10;\nint rs = ++a;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("放在变量的后面，先拿变量的值进行运算，再对变量的值进行+1或者-1")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int a = 10;\nint rs = a++;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("注意事项:")]),a._v(" "),s("ul",[s("li",[a._v("++和--即可以放在变量的后边，也可以放在变量的前边")]),a._v(" "),s("li",[a._v("单独使用的时候，++和--无论是放在变量的前边还是后边，结果都是一样的")]),a._v(" "),s("li",[a._v("参与操作的时候，如果放在变量的后边，先拿变量参与操作，后拿变量做++或者--")]),a._v(" "),s("li",[a._v("参与操作的时候，如果放在变量的前边，先拿变量++或者--，后拿变量参与操作")])]),a._v(" "),s("p",[a._v("最常见的用法:"),s("strong",[a._v("单独使用")])]),a._v(" "),s("p",[a._v("案例")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int a = 2;\nint b = ++a + ++a;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int a = 2;\nint b = ++a + a++ + ++a;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("都需要输出a和b的值")]),a._v(" "),s("h2",{attrs:{id:"关系运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[a._v("#")]),a._v(" 关系运算符")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221226222813341","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221226222813341.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("代码演示:")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//定义变量\nint i = 10;\nint j = 20;\nint k = 10;\n\n//==\nSystem.out.println(i == j);\nSystem.out.println(i == K);\n\n//!=\nSystem.out.println(i != j);\nSystem.out.println(i != K);\n\n//>\nSystem.out.println(i > j);\nSystem.out.println(i > K);\n\n//>=\nSystem.out.println(i >= j);\nSystem.out.println(i >= K);\n\n//如果不小心把== 写成了 =\nSystem.out.println(i = j);\n//把j的值赋值给了i，然后输出i的值\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br")])]),s("p",[a._v("注意事项:")]),a._v(" "),s("p",[a._v("关系运算符的结果都是boolean类型，要么是true，要么是false")]),a._v(" "),s("p",[a._v('千万不要把"=="写成"="')]),a._v(" "),s("h2",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[a._v("#")]),a._v(" 逻辑运算符")]),a._v(" "),s("p",[a._v("在数学中，一个数据x，大于3，小于6，我们可以这样来进行表示:"),s("strong",[a._v("3<x<6")])]),a._v(" "),s("p",[a._v("但是在Java中，需要把上面的式子先进行拆解，再进行合并表达")]),a._v(" "),s("p",[a._v("拆解为:"),s("strong",[a._v("x>3和x<6")])]),a._v(" "),s("p",[a._v("合并后:"),s("strong",[a._v("x>3 && x<6")])]),a._v(" "),s("p",[a._v("&&其实将就是一个逻辑运算符")]),a._v(" "),s("p",[a._v("我们可以这样说，逻辑运算符，是用来"),s("strong",[a._v("连接关系表达式")]),a._v("的运算符。\n当然，逻辑运算符也可以直接"),s("strong",[a._v("连接布尔类型的常量或者变量")]),a._v("。")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221226230256279","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221226230256279.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("代码演示：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int i = 10;\nint j = 20;\nint k = 30;\n//&\nSystem.out.println(i>j & i>k);\nSystem.out.println(i<j & i>k);\nSystem.out.println(i>j & i<k);\nSystem.out.println(i<j & i<k);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int i = 10;\nint j = 20;\nint k = 30;\n//丨\nSystem.out.println(i>j | i>k);\nSystem.out.println(i<j | i>k);\nSystem.out.println(i>j | i<k);\nSystem.out.println(i<j | i<k);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int i = 10;\nint j = 20;\nint k = 30;\n//^\nSystem.out.println(i>j ^ i>k);\nSystem.out.println(i<j ^ i>k);\nSystem.out.println(i>j ^ i<k);\nSystem.out.println(i<j ^ i<k);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int i = 10;\nint j = 20;\nint k = 30;\n//!\nSystem.out.println(i>j);\nSystem.out.println(!(i<j);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h2",{attrs:{id:"短路逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#短路逻辑运算符"}},[a._v("#")]),a._v(" 短路逻辑运算符")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("符号")]),a._v(" "),s("th",[a._v("作用")]),a._v(" "),s("th",[a._v("说明")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("&&")]),a._v(" "),s("td",[a._v("短路与")]),a._v(" "),s("td",[a._v("如果左边为true，右边执行；如果左边为false，右边不执行，结果为false;")])]),a._v(" "),s("tr",[s("td",[a._v("||")]),a._v(" "),s("td",[a._v("短路或")]),a._v(" "),s("td",[a._v("如果左边为false，右边执行；如果左边为true，右边不执行，结果为true;")])])])]),a._v(" "),s("p",[a._v("代码演示:")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int i = 10;\nint j = 20;\nint k = 30; \n//&\nSystem.out.println(i>j && i>k);\nSystem.out.println(i<j && i>k);\nSystem.out.println(i>j && i<k);\nSystem.out.println(i<j && i<k);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("p",[a._v("注意事项:")]),a._v(" "),s("p",[a._v("逻辑与&，无论左边真假，右边都要执行。\n短路与&&，如果左边为真，右边执行；如果左边为假，右边不执行。")]),a._v(" "),s("p",[a._v("逻辑或|，无论左边真假，右边都要执行。\n短路或||，如果左边为假，右边执行；如果左边为真，右边不执行。")]),a._v(" "),s("h2",{attrs:{id:"三元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符"}},[a._v("#")]),a._v(" 三元运算符")]),a._v(" "),s("p",[a._v("格式:关系表达式？表达式1：表达式2；")]),a._v(" "),s("p",[a._v("范例:a>b?a:b;")]),a._v(" "),s("p",[a._v("计算规则:")]),a._v(" "),s("p",[a._v("首先计算关系表达式的值")]),a._v(" "),s("p",[a._v("如果值为true,表达式1的值就是运算结果")]),a._v(" "),s("p",[a._v("如果值为false,表达式2的值就是运算结果")]),a._v(" "),s("p",[a._v("代码演示:")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('int a = 10;\nint b = 20;\nint max = a>b? a:b;\nSystem.out.println("max:"+max);\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("案例:两只老虎")]),a._v(" "),s("p",[a._v("需求：动物园里面有两只老虎，已知两只老虎的体重分别为180kg,200kg,请用程序判断两只老虎体重是否相同")]),a._v(" "),s("p",[a._v("分析：")]),a._v(" "),s("p",[a._v("1.定义两个变量用于保存老虎的体重，单位为kg，这里体现数值就可以了")]),a._v(" "),s("p",[a._v("2.用三元运算符实现老虎体重的判断")]),a._v(" "),s("p",[a._v("案例：三个和尚")]),a._v(" "),s("p",[a._v("需求：一座寺庙里面住着三个和尚，已知他们的身高分别为150cm,210cm,165cm,请使用程序实现获取这三个和尚的最高身高")]),a._v(" "),s("h1",{attrs:{id:"数据输入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据输入"}},[a._v("#")]),a._v(" 数据输入")]),a._v(" "),s("p",[a._v("Scanner数据输入")]),a._v(" "),s("p",[a._v("Scanner的使用步骤")]),a._v(" "),s("p",[a._v("1.导包")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221227132035496","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221227132035496.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("2.创建对象")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221227132039611","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221227132039611.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("3.接收数据")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20221227132044499","data-src":"https://gitee.com/try-to-be-better/cloud-images/raw/master/img/image-20221227132044499.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("最好是在接收数据的前面给用户一个提示")]),a._v(" "),s("p",[a._v("案例：三个和尚plus版本")]),a._v(" "),s("p",[a._v("分析：身高未知，采用键盘录入的方式")]),a._v(" "),s("p",[a._v("键盘录入三个身高分别赋值给三个变量")])])}),[],!1,null,null,null);s.default=e.exports}}]);